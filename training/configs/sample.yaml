# Meta data for training
network: r50 # artichitect for model
pretrained_model:  # if not use, it will be None or , else be name
epochs: 1 # number of epochs to train for
patience: 50 # number of epochs to train for
imgsz: 640 # size of input images as integer or w,h
batchsz: 128
embedding_size: 512 # size of embedding vector
save: True # save train checkpoints and predict results
save_period: 20 # Save checkpoint every x epochs (disabled if < 1)
device: mps # device to run on, i.e. cuda device=0 or device=0,1,2,3 or device=cpu
worker: 4 # number of worker threads for data loading (per RANK if DDP)
project: recognition # project name
name: training
optimizer: SGD # optimizer to use, choices=['SGD', 'Adam', 'AdamW', 'RMSProp']
verbose: True  # whether to print verbose output
seed: 42  # random seed for reproducibility
resume: False

# Figure for classification
dropout: 0.0

# Path leading to dataset
path_data:  # dataset root dir
save_dir: workdirs

# Val/Test settings 
save_json: False  # save results to JSON file
save_hybrid: False  # save hybrid version of labels (labels + additional predictions)
conf: 0.7
fp16: False  # use half precision (FP16)
plots: False  # save plots during train/val

# Hyperparameters 
margin_list: (1.0, 0.5, 0.0)
sample_rate: 1.0
lr0: 0.01  # initial learning rate (i.e. SGD=1E-2, Adam=1E-3)
lrf: 0.01  # final learning rate (lr0 * lrf)
momentum: 0.937  # SGD momentum/Adam beta1
weight_decay: 0.0005  # optimizer weight decay 5e-4
warmup_epochs: 3.0  # warmup epochs (fractions ok)
warmup_momentum: 0.8  # warmup initial momentum
warmup_bias_lr: 0.1  # warmup initial bias lr
hsv_h: 0.015  # image HSV-Hue augmentation (fraction)
hsv_s: 0.7  # image HSV-Saturation augmentation (fraction)
hsv_v: 0.4  # image HSV-Value augmentation (fraction)
degrees: 0.0  # image rotation (+/- deg)
translate: 0.1  # image translation (+/- fraction)
scale: 0.5  # image scale (+/- gain)
shear: 0.0  # image shear (+/- deg)
perspective: 0.0  # image perspective (+/- fraction), range 0-0.001
flipud: 0.0  # image flip up-down (probability)
fliplr: 0.5  # image flip left-right (probability)
mosaic: 1.0  # image mosaic (probability)
mixup: 0.0  # image mixup (probability)
copy_paste: 0.0  # segment copy-paste (probability)

# Export settings 
format: torchscript  # format to export to
keras: False  # use Keras
optimize: False  # TorchScript: optimize for mobile
int8: False  # CoreML/TF INT8 quantization
dynamic: False  # ONNX/TF/TensorRT: dynamic axes
simplify: False  # ONNX: simplify model
opset:  # ONNX: opset version (optional)
workspace: 4  # TensorRT: workspace size (GB)